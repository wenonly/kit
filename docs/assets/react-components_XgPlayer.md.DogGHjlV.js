import{X as i}from"./chunks/index.C1KsoeWK.js";import{H as t,a as e,K as l,x as n,b as s,k as p,W as h,o as r}from"./chunks/framework.CJwJD4JI.js";import"./chunks/theme.HPAzWDRr.js";import"./chunks/index.BhgsCdlE.js";import"./chunks/LoadingOutlined.pf--WT2a.js";import"./chunks/motion.CTeaIVPj.js";import"./chunks/motion.1cJ9A0iE.js";import"./chunks/index.DxYC8vbv.js";import"./chunks/PurePanel.B5_MI9oE.js";import"./chunks/KeyCode.w9zvoGW4.js";import"./chunks/List.BTYcv74d.js";const k=s("h1",{id:"xgplayer",tabindex:"-1"},[p("XgPlayer "),s("a",{class:"header-anchor",href:"#xgplayer","aria-label":'Permalink to "XgPlayer"'},"​")],-1),o=s("p",null,"XgPlayer 是一个 React 组件，用于在页面上嵌入一个视频播放器。它使用了 xgplayer，一个强大的 HTML5 视频播放器。",-1),d=h(`<br><nav class="table-of-contents"><ul><li><a href="#参数">参数</a></li><li><a href="#使用方法">使用方法</a></li><li><a href="#生命周期">生命周期</a></li><li><a href="#xgplayermodal">XgPlayerModal</a></li></ul></nav><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>key</th><th>类型</th></tr></thead><tbody></tbody></table><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XgPlayer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./XgPlayer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XgPlayer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://your-video-url.mp4&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ autoplay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }} /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> App;</span></span></code></pre></div><p>在上述代码中，我们导入了 XgPlayer 组件，并在 App 组件中使用它。我们传递了 src 属性，指定了视频的 URL，以及 options 属性，设置了视频自动播放。</p><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><p>当 XgPlayer 组件被挂载到 DOM 时，它会创建一个新的 xgplayer 实例，并将其挂载到一个 div 元素上。当组件被卸载时，它会销毁 xgplayer 实例，释放所有相关资源。</p><h2 id="xgplayermodal" tabindex="-1">XgPlayerModal <a class="header-anchor" href="#xgplayermodal" aria-label="Permalink to &quot;XgPlayerModal&quot;">​</a></h2><p>XgPlayerModal 是一个 React 弹窗组件，用于在模态窗口中显示 XgPlayer 播放器。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { XgPlayerModal } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./XgPlayerModal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XgPlayerModal</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> open</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} /&gt;</span></span></code></pre></div>`,12),A=JSON.parse('{"title":"XgPlayer","description":"","frontmatter":{},"headers":[],"relativePath":"react-components/XgPlayer.md","filePath":"packages/react-components/src/components/XgPlayer/README.md","lastUpdated":1719386337000}'),g={name:"react-components/XgPlayer.md"},B=Object.assign(g,{setup(c){return(y,E)=>{const a=t("VueWrapper");return r(),e("div",null,[k,o,l(a,{component:n(i),src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/nupenuvpxnuvo/xgplayer_doc/xgplayer-demo-720p.mp4"},null,8,["component"]),d])}}});export{A as __pageData,B as default};
